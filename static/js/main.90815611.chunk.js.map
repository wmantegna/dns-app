{"version":3,"sources":["shared/myProvider.react.js","input/domainForm.react.js","input/selectType.react.js","input/inputForm.react.js","input/inputPanel.react.js","siteNavbar.react.js","output/calculate.js","output/results.react.js","App.js","reportWebVitals.js","index.js"],"names":["MyContext","React","MyProvider","children","useState","domain","setDomain","data","setData","name","setName","ttl","setTtl","defaultValues","type","setType","Provider","value","DomainForm","useContext","Form","Row","FormGroup","Label","Input","onChange","e","target","placeholder","SelectType","InputForm","Col","md","InputPanel","SiteNavbar","Navbar","color","dark","expand","Container","NavbarBrand","href","checkSubdomain","toLowerCase","message","checkTtl","Results","alerts","inputs","messages","forEach","input","push","filter","calculate","map","alert","Alert","App","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAGaA,EAAYC,kBA4BVC,EA1BI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnB,EAA4BC,mBAAS,cAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAsBN,mBAAS,MAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KACA,EAAwBR,mBAAS,IAAjC,mBACMS,EAAgB,CACpBR,SACAC,YACAC,OACAE,OACAE,MACAG,KAPF,KAQEN,UACAE,UACAK,QAVF,KAWEH,UAEF,OACE,cAACZ,EAAUgB,SAAX,CAAoBC,MAAOJ,EAA3B,SACGV,KCDQe,MArBf,WACE,MAGIC,qBAAWnB,GAFbK,EADF,EACEA,OACAC,EAFF,EAEEA,UAGF,OAAO,cAACc,EAAA,EAAD,UACH,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,8BACA,cAACC,EAAA,EAAD,CACEV,KAAK,OACLG,MAAOZ,EACPoB,SAAU,SAAAC,GAAC,OAAIpB,EAAUoB,EAAEC,OAAOV,QAClCW,YAAY,uB,QCLXC,MAXf,YAAwC,IAAnBZ,EAAkB,EAAlBA,MAAOQ,EAAW,EAAXA,SAE1B,OAAO,eAACD,EAAA,EAAD,CAAOV,KAAK,SAASW,SAAUA,EAAUR,MAAOA,EAAhD,UACL,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,KAAd,oBCmDWa,MAvDf,WACE,MASIX,qBAAWnB,GARbO,EADF,EACEA,KACAE,EAFF,EAEEA,KACAE,EAHF,EAGEA,IACAG,EAJF,EAIEA,KACAN,EALF,EAKEA,QACAE,EANF,EAMEA,QACAK,EAPF,EAOEA,QACAH,EARF,EAQEA,OAGF,OAAO,cAACQ,EAAA,EAAD,UACH,eAACC,EAAA,EAAD,WACE,eAACU,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACT,EAAA,EAAD,wBACA,cAACC,EAAA,EAAD,CACEC,SAAU,SAAAC,GAAC,OAAIhB,EAAQgB,EAAEC,OAAOV,QAChCH,KAAK,OACLG,MAAOR,OAGX,cAACsB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACV,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACF,cAAC,EAAD,CACEN,MAAOH,EACPW,SAAU,SAAAC,GAAC,OAAIX,EAAQW,EAAEC,OAAOV,eAIpC,cAACc,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACV,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,kBACA,cAACC,EAAA,EAAD,CACEV,KAAK,SACLG,MAAON,EACPc,SAAU,SAAAC,GAAC,OAAId,EAAOc,EAAEC,OAAOV,eAIrC,cAACc,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACV,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBACA,cAACC,EAAA,EAAD,CACEV,KAAK,OACLG,MAAOV,EACPkB,SAAU,SAAAC,GAAC,OAAIlB,EAAQkB,EAAEC,OAAOV,qBCxC/BgB,MATf,WAEE,OAAO,gCACL,6CACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,wBCIWC,MAVf,WACE,OACE,cAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,KAAjC,SACI,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAaC,KAAK,IAAlB,sBCKH,SAASC,EAAT,GAA8D,EAArCnC,KAAsC,IAAhCE,EAA+B,EAA/BA,KAAMK,EAAyB,EAAzBA,KAAYT,GAAa,EAAnBM,IAAmB,uDAAJ,IAC/D,MAAa,KAATF,GAAsC,UAAvBK,EAAK6B,cACf,KAEF,CACLP,MAAO,UACPQ,QAAQ,eAAD,OAAiBnC,EAAjB,YAAyBJ,EAAzB,MAIJ,SAASwC,EAASlC,GACvB,OAAIA,EAAM,KACD,CACLyB,MAAO,UACPQ,QAAQ,wBAAD,OAA0BjC,EAA1B,yDAGPA,EAAM,MACD,CACLyB,MAAO,UACPQ,QAAQ,mBAAD,OAAqBjC,EAArB,+DAHX,E,YCLamC,MAlBf,WACE,MAMI3B,qBAAWnB,GALbK,EADF,EACEA,OAOE0C,EDdC,SAAmBC,GAAsB,IAAd3C,EAAa,uDAAJ,GACrC4C,EAAW,GAOf,OALAD,EAAOE,SAAQ,SAAAC,GACbF,EAASG,KAAKV,EAAeS,EAAO9C,IACpC4C,EAASG,KAAKP,EAASM,EAAMxC,SAGxBsC,EAASI,QAAO,SAAAT,GAAO,OAAe,MAAXA,KCMrBU,CAAU,CADX,CAAC/C,KAPb,EAEEA,KAKiBE,KAPnB,EAGEA,KAIuBE,IAPzB,EAIEA,IAG4BG,KAP9B,EAKEA,OAG8BT,GAChC,OAAO,gCACL,yCACC0C,EAAOQ,KACN,SAAAC,GAAK,OAAI,cAACC,EAAA,EAAD,CAAOrB,MAAOoB,EAAMpB,MAApB,SAA4BoB,EAAMZ,iBCIlCc,MAhBf,WACE,OACE,eAAC,EAAD,WACE,iCACE,cAAC,EAAD,MAEF,cAACnB,EAAA,EAAD,UACE,eAAClB,EAAA,EAAD,WACE,cAACU,EAAA,EAAD,CAAK4B,GAAI,GAAI3B,GAAI,EAAjB,SAAoB,cAAC,EAAD,MACpB,cAACD,EAAA,EAAD,CAAK4B,GAAI,GAAI3B,GAAI,EAAjB,SAAoB,cAAC,EAAD,eCHf4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.90815611.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\n\nexport const MyContext = React.createContext();\n\nconst MyProvider = ({children}) => {\n  const [domain, setDomain] = useState('google.com');\n\n  const [data, setData] = useState('');\n  const [name, setName] = useState('');\n  const [ttl, setTtl] = useState(3600);\n  const [type, setType] = useState('');\n  const defaultValues = {\n    domain,\n    setDomain,\n    data,\n    name,\n    ttl,\n    type,\n    setData,\n    setName,\n    setType,\n    setTtl,\n  };\n  return (\n    <MyContext.Provider value={defaultValues}>\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;","import { useContext } from 'react';\nimport { Form, FormGroup, Input, Label, Row } from 'reactstrap';\nimport {MyContext} from '../shared/myProvider.react';\n\nfunction DomainForm() {\n  const {\n    domain,\n    setDomain,\n  } = useContext(MyContext);\n\n  return <Form>\n      <Row>\n          <FormGroup>\n            <Label>You Domain name</Label>\n            <Input \n              type=\"text\" \n              value={domain} \n              onChange={e => setDomain(e.target.value)} \n              placeholder=\"google.com\"\n            />\n          </FormGroup>\n      </Row>\n    </Form>;\n}\n\nexport default DomainForm;\n","import { Input } from 'reactstrap';\n\nfunction SelectType({value, onChange}) {\n\n  return <Input type=\"select\" onChange={onChange} value={value}>\n    <option value=\"A\">A</option>\n    <option value=\"AAAA\">AAAA</option>\n    <option value=\"CAA\">CAA</option>\n    <option value=\"CNAME\">CNAME</option>\n    <option value=\"MX\">MX</option>\n  </Input>;\n}\n\nexport default SelectType;\n","import { useContext } from 'react';\nimport { Col, Form, FormGroup, Input, Label, Row } from 'reactstrap';\nimport SelectType from './selectType.react';\nimport {MyContext} from '../shared/myProvider.react';\n\nfunction InputForm() {\n  const {\n    data,\n    name,\n    ttl,\n    type,\n    setData,\n    setName,\n    setType,\n    setTtl,\n  } = useContext(MyContext);\n\n  return <Form>\n      <Row>\n        <Col md={4}>\n          <Label>Host Name</Label>\n          <Input \n            onChange={e => setName(e.target.value)}\n            type=\"text\" \n            value={name} \n          />\n        </Col>\n        <Col md={2}>\n          <FormGroup>\n            <Label>Type</Label>\n          <SelectType \n            value={type} \n            onChange={e => setType(e.target.value)}\n          />\n          </FormGroup>\n        </Col>\n        <Col md={2}>\n          <FormGroup>\n            <Label>TTL</Label>\n            <Input\n              type=\"number\"\n              value={ttl}\n              onChange={e => setTtl(e.target.value)}\n            />\n          </FormGroup>\n        </Col>\n        <Col md={4}>\n          <FormGroup>\n            <Label>Data</Label>\n            <Input \n              type=\"text\" \n              value={data} \n              onChange={e => setData(e.target.value)} \n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      </Form>;\n}\n\nexport default InputForm;\n","import DomainForm from './domainForm.react';\nimport InputForm from './inputForm.react';\n\nfunction InputPanel() {\n\n  return <div>\n    <h2>DNS Records</h2>\n    <DomainForm />\n    <InputForm />\n  </div>;\n}\n\nexport default InputPanel;\n","import { Container, Navbar, NavbarBrand } from 'reactstrap';\n\nfunction SiteNavbar() {\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n        <Container>\n          <NavbarBrand href=\"/\">dn5</NavbarBrand>\n        </Container>\n      </Navbar>\n  );\n}\n\nexport default SiteNavbar;\n","export function calculate(inputs, domain = '') {\n  let messages = [];\n\n  inputs.forEach(input => {\n    messages.push(checkSubdomain(input, domain));\n    messages.push(checkTtl(input.ttl));\n  });\n\n  return messages.filter(message => message != null);\n}\n\nexport function checkSubdomain({data, name, type, ttl}, domain = '') {\n  if (name === '' || type.toLowerCase() !== 'cname') {\n    return null;\n  }\n  return {\n    color: 'success', \n    message: `Subdomain: '${name}.${domain}'`,\n  };\n}\n\nexport function checkTtl(ttl) {\n  if (ttl < 3600) {\n    return {\n      color: 'warning', \n      message: `Time-to-live is only ${ttl} seconds (consider using a minimum of 3600 seconds).`,\n    };\n  }\n  if (ttl > 86400) {\n    return {\n      color: 'warning', \n      message: `Time-to-live is ${ttl} seconds (consider using a maximum of 86400 seconds).`,\n    };\n  }\n}\n","import { useContext } from 'react';\nimport { calculate } from './calculate';\nimport { Alert } from 'reactstrap';\nimport {MyContext} from '../shared/myProvider.react';\n\nfunction Results() {\n  const {\n    domain,\n    data,\n    name,\n    ttl,\n    type,\n  } = useContext(MyContext);\n  let input = {data, name, ttl, type};\n  let alerts = calculate([input], domain);\n  return <div>\n    <h2>Results</h2>\n    {alerts.map(\n      alert => <Alert color={alert.color}>{alert.message}</Alert>\n    )}\n  </div>;\n}\n\nexport default Results;\n","import InputPanel from './input/inputPanel.react';\nimport MyProvider from './shared/myProvider.react';\nimport SiteNavbar from './siteNavbar.react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Results from './output/results.react';\n\nfunction App() {\n  return (\n    <MyProvider>\n      <header>\n        <SiteNavbar />\n      </header>\n      <Container>\n        <Row>\n          <Col sm={12} md={6}><InputPanel /></Col>\n          <Col sm={12} md={6}><Results /></Col>\n        </Row>\n      </Container>\n    </MyProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}